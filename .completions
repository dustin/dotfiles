# Location of the completion cache
set completecache=~/.complete.cache
set updatecache=0

# Load the existing cache first if it's there.  If anything's changed, we'll
# override it, but we need the initial definitions.
if ( -f $completecache ) then
	source $completecache
endif

# darcs completions
if(! $?darcscommands) then
	set darcscommands=()
endif
set darcspath=`which darcs`
if ( $? == 0 ) then
	if ( -f $completecache && { test $darcspath -ot $completecache } ) then
		:
	else
		echo "Updating darcs"
		set updatecache=1
		set darcscommands=( \
			`darcs | egrep "^  " | awk '{print $1}' | sort -u ` )
	endif
	complete darcs 'p/1/$darcscommands/'
endif

# mercurial completions
if(! $?hgcommands) then
	set hgcommands=()
endif
set hgpath=`which hg`
if ( $? == 0 ) then
	if ( -f $completecache && { test $hgpath -ot $completecache } ) then
		:
	else
		echo "Updating mercurial"
		set updatecache=1
		set hgcommands=( \
			`hg help | egrep "^ " | awk '{print $1}' | sort -u ` )
	endif
	complete hg 'p/1/$hgcommands/'
endif

# git completions
if(! $?gitcommands) then
	set gitcommands=()
endif
set gitpath=`which git`
if ( $? == 0 ) then
	if ( -f $completecache && { test $gitpath -ot $completecache } ) then
		:
	else
		echo "Updating git"
		set updatecache=1
		set gitcommands=( \
			`git help -a | egrep "^  [A-z]" | sort -u ` )
	endif
	complete git 'p/1/$gitcommands/'
endif

# svn completions
if(! $?svncommands) then
	set svncommands=()
endif
set svnpath=`which svn`
if ( $? == 0 ) then
	if ( -f $completecache && { test $svnpath -ot $completecache } ) then
		:
	else
		echo "Updating svn"
		set updatecache=1
		set svncommands=( \
			`svn help | egrep "^   " | sed 's/[,()?]//g' | sort -u ` )
	endif
	complete svn 'p/1/$svncommands/'
endif

# And perforce
which p4 >& /dev/null
if ( $? == 0 ) then
	set p4commands=(add branch branches edit integrate resolve revert \
		submit opened sync delete)
	complete p4 'p/1/$p4commands/' \
		'n/add/f/' 'n/edit/f/' 'n/-b/$p4branches/' \
		'n/branch/$p4branches/' 'n/delete/f/'
endif

# If we need to update the cache, update the cache
if ($updatecache == 1) then
	echo "Updating the completion cache."
	rm -f $completecache
	touch $completecache
	echo "set darcscommands=($darcscommands)" >> $completecache
	echo "set hgcommands=($hgcommands)" >> $completecache
	echo "set gitcommands=($gitcommands)" >> $completecache
	echo "set svncommands=($svncommands)" >> $completecache
endif

# Smarteiffel completions
complete se 'p/1/(compile pretty finder clean short)/'

# vim: syntax=csh
